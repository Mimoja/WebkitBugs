------------------------------------------------------------------------
r137632 | dbarton@mathscribe.com | 2012-12-13 20:48:26 +0100 (Do, 13. Dez 2012) | 28 Zeilen
GeÃ¤nderte Pfade:
   M /trunk/LayoutTests/ChangeLog
   A /trunk/LayoutTests/mathml/mo-stretch-crash-expected.txt
   A /trunk/LayoutTests/mathml/mo-stretch-crash.html
   M /trunk/Source/WebCore/ChangeLog
   M /trunk/Source/WebCore/rendering/RenderBlock.cpp

Heap-use-after-free in WebCore::RenderBlock::finishDelayUpdateScrollInfo
https://bugs.webkit.org/show_bug.cgi?id=103750

Reviewed by Tony Chang.

Source/WebCore:

MathML sometimes creates and destroys renderers for descendants during layout (or even to calculate
preferred logical widths), e.g. for operator stretching. RenderBlock::finishDelayUpdateScrollInfo
must therefore leave gDelayedUpdateScrollInfoSet intact as it iterates over it, so
RenderBlock::willBeDestroyed can call gDelayedUpdateScrollInfoSet->remove(this) effectively if needed.
This also prevents duplicate entries from being added to gDelayedUpdateScrollInfoSet.

Test: mathml/mo-stretch-crash.html

* rendering/RenderBlock.cpp:
(WebCore::RenderBlock::startDelayUpdateScrollInfo):
    - Allow gDelayedUpdateScrollInfoSet to be non-null when gDelayUpdateScrollInfo is 0 during
      RenderBlock::finishDelayUpdateScrollInfo.
(WebCore::RenderBlock::finishDelayUpdateScrollInfo):
    - Remove blocks from gDelayedUpdateScrollInfoSet one at a time, waiting for each block until it is
      about to be updated.

LayoutTests:

* mathml/mo-stretch-crash-expected.txt: Added.
* mathml/mo-stretch-crash.html: Added.


