------------------------------------------------------------------------
r179702 | cdumez@apple.com | 2015-02-05 22:29:19 +0100 (Do, 05. Feb 2015) | 23 Zeilen
Ge√§nderte Pfade:
   A /trunk/LayoutTests/http/tests/cache/memory-cache-pruning-expected.txt
   A /trunk/LayoutTests/http/tests/cache/memory-cache-pruning.html
   M /trunk/Source/WebCore/ChangeLog
   M /trunk/Source/WebCore/WebCore.exp.in
   M /trunk/Source/WebCore/loader/cache/MemoryCache.cpp
   M /trunk/Source/WebCore/loader/cache/MemoryCache.h
   M /trunk/Source/WebCore/testing/Internals.cpp
   M /trunk/Source/WebCore/testing/Internals.h
   M /trunk/Source/WebCore/testing/Internals.idl

Free memory read under MemoryCache::pruneLiveResourcesToSize()
https://bugs.webkit.org/show_bug.cgi?id=141292
<rdar://problem/19725522>

Reviewed by Antti Koivisto.

In MemoryCache::pruneLiveResourcesToSize(), we were iterating over the
m_liveDecodedResources ListHashSet and possibly calling
CachedResource::destroyDecodedData() on the current value. Doing so
would cause a call to ListHashSet::remove() to remove the value pointed
by the current iterator, thus invalidating our iterator.

In this patch, we increment the ListHashSet iterator *before* calling
CachedResource::destroyDecodedData(), while the current iterator is
still valid. Note that this is safe because unlike iteration of most
WTF Hash data structures, iteration is guaranteed safe against mutation
of the ListHashSet, except for removal of the item currently pointed to
by a given iterator.

Test: http/tests/cache/memory-cache-pruning.html

* loader/cache/MemoryCache.cpp:
(WebCore::MemoryCache::pruneLiveResourcesToSize):

