------------------------------------------------------------------------
r201787 | mark.lam@apple.com | 2016-06-08 04:53:32 +0200 (Mi, 08. Jun 2016) | 66 Zeilen
Ge√§nderte Pfade:
   M /trunk/Source/JavaScriptCore/ChangeLog
   M /trunk/Source/JavaScriptCore/inspector/JSInjectedScriptHost.cpp
   M /trunk/Source/JavaScriptCore/interpreter/ShadowChicken.cpp
   M /trunk/Source/JavaScriptCore/profiler/ProfilerBytecodeSequence.cpp
   M /trunk/Source/JavaScriptCore/profiler/ProfilerCompilation.cpp
   M /trunk/Source/JavaScriptCore/profiler/ProfilerDatabase.cpp
   M /trunk/Source/JavaScriptCore/profiler/ProfilerOSRExitSite.cpp
   M /trunk/Source/JavaScriptCore/profiler/ProfilerOriginStack.cpp
   M /trunk/Source/JavaScriptCore/runtime/ArrayPrototype.cpp
   M /trunk/Source/JavaScriptCore/runtime/LiteralParser.cpp
   M /trunk/Source/JavaScriptCore/runtime/ModuleLoaderObject.cpp
   M /trunk/Source/JavaScriptCore/runtime/ObjectConstructor.cpp
   M /trunk/Source/JavaScriptCore/runtime/RegExpObject.cpp
   M /trunk/Source/JavaScriptCore/runtime/RegExpPrototype.cpp
   M /trunk/Source/JavaScriptCore/runtime/StringPrototype.cpp
   M /trunk/Source/JavaScriptCore/runtime/TemplateRegistry.cpp
   A /trunk/Source/JavaScriptCore/tests/stress/regress-158411.js
   M /trunk/Source/WebCore/ChangeLog
   M /trunk/Source/WebCore/bindings/js/IDBBindingUtilities.cpp
   M /trunk/Source/WebCore/bindings/js/JSCommandLineAPIHostCustom.cpp
   M /trunk/Source/WebCore/bindings/js/JSCryptoKeySerializationJWK.cpp
   M /trunk/Source/WebCore/bindings/js/JSDOMBinding.h
   M /trunk/Source/WebCore/bindings/js/SerializedScriptValue.cpp

Need an exception check after constructEmptyArray().
https://bugs.webkit.org/show_bug.cgi?id=158411

Reviewed by Saam Barati.

Source/JavaScriptCore:

Added an exception check after each call to constructEmptyArray().

* inspector/JSInjectedScriptHost.cpp:
(Inspector::JSInjectedScriptHost::getInternalProperties):
(Inspector::JSInjectedScriptHost::weakMapEntries):
(Inspector::JSInjectedScriptHost::weakSetEntries):
(Inspector::JSInjectedScriptHost::iteratorEntries):
* interpreter/ShadowChicken.cpp:
(JSC::ShadowChicken::functionsOnStack):
* profiler/ProfilerBytecodeSequence.cpp:
(JSC::Profiler::BytecodeSequence::addSequenceProperties):
* profiler/ProfilerCompilation.cpp:
(JSC::Profiler::Compilation::toJS):
* profiler/ProfilerDatabase.cpp:
(JSC::Profiler::Database::toJS):
* profiler/ProfilerOSRExitSite.cpp:
(JSC::Profiler::OSRExitSite::toJS):
* profiler/ProfilerOriginStack.cpp:
(JSC::Profiler::OriginStack::toJS):
* runtime/ArrayPrototype.cpp:
(JSC::arrayProtoFuncConcat):
(JSC::arrayProtoFuncSlice):
(JSC::arrayProtoFuncSplice):
* runtime/LiteralParser.cpp:
(JSC::LiteralParser<CharType>::parse):
* runtime/ModuleLoaderObject.cpp:
(JSC::moduleLoaderObjectRequestedModules):
* runtime/ObjectConstructor.cpp:
(JSC::ownPropertyKeys):
* runtime/RegExpObject.cpp:
(JSC::collectMatches):
* runtime/RegExpPrototype.cpp:
(JSC::regExpProtoFuncSplitFast):
* runtime/StringPrototype.cpp:
(JSC::stringProtoFuncSplitFast):
* runtime/TemplateRegistry.cpp:
(JSC::TemplateRegistry::getTemplateObject):

* tests/stress/regress-158411.js: Added.

Source/WebCore:

A stress test for this was added in JavaScriptCore.

* bindings/js/IDBBindingUtilities.cpp:
(WebCore::toJS):
* bindings/js/JSCommandLineAPIHostCustom.cpp:
(WebCore::getJSListenerFunctions):
* bindings/js/JSCryptoKeySerializationJWK.cpp:
(WebCore::buildJSONForRSAComponents):
(WebCore::addBoolToJSON):
(WebCore::addUsagesToJSON):
(WebCore::JSCryptoKeySerializationJWK::serialize):
* bindings/js/JSDOMBinding.h:
(WebCore::toJS):
* bindings/js/SerializedScriptValue.cpp:
(WebCore::CloneDeserializer::deserialize):



