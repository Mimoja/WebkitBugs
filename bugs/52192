------------------------------------------------------------------------
r202460 | mark.lam@apple.com | 2016-06-25 01:34:45 +0200 (Sa, 25. Jun 2016) | 57 Zeilen
Ge√§nderte Pfade:
   M /trunk/LayoutTests/ChangeLog
   A /trunk/LayoutTests/http/tests/security/regress-52192-expected.txt
   A /trunk/LayoutTests/http/tests/security/regress-52192.html
   A /trunk/LayoutTests/http/tests/security/resources/regress-52192-syntax-error.js
   A /trunk/LayoutTests/http/tests/security/resources/regress-52192-throw-error.js
   M /trunk/Source/JavaScriptCore/ChangeLog
   M /trunk/Source/JavaScriptCore/runtime/ErrorInstance.cpp
   M /trunk/Source/JavaScriptCore/runtime/ErrorInstance.h
   M /trunk/Source/WebCore/ChangeLog
   A /trunk/Source/WebCore/ForwardingHeaders/runtime/ErrorInstance.h
   M /trunk/Source/WebCore/bindings/js/JSDOMBinding.cpp

[JSC] Error prototypes are called on remote scripts.
https://bugs.webkit.org/show_bug.cgi?id=52192

Reviewed by Keith Miller.

Source/JavaScriptCore:

Added a sanitizedToString() to the Error instance object so that it can be used
to get an error string without invoking getters and proxies.

* runtime/ErrorInstance.cpp:
(JSC::ErrorInstance::finishCreation):
(JSC::ErrorInstance::sanitizedToString):
* runtime/ErrorInstance.h:
(JSC::ErrorInstance::createStructure):
(JSC::ErrorInstance::runtimeTypeForCause):
(JSC::ErrorInstance::clearRuntimeTypeForCause):

Source/WebCore:

Test: http/tests/security/regress-52192.html

Parsing errors are reported to the main script's window.onerror function.  AFAIK,
both Chrome and Firefox have the error reporting mechanism use an internal
sanitized version of Error.prototype.toString() that will not invoke any getters
or proxies instead.

This patch fixes this issue by matching Chrome and Firefox's behavior.

Note: we did not choose to make error objects and prototypes read-only because
that was observed to have broken the web.
See https://bugs.chromium.org/p/chromium/issues/detail?id=69187#c73

Credit for reporting this issue goes to Daniel Divricean (http://divricean.ro).

* bindings/js/JSDOMBinding.cpp:
(WebCore::reportException):
* ForwardingHeaders/runtime/ErrorInstance.h: Added.

LayoutTests:

The added test will test the following combinations of factors:

1. Explicitly throwing an error of each of the types of JS errors i.e.
   Error, EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError.
2. Validating that the error received in window.onerror does not leak any info.
3. Validating that the 'name' and 'toString' getters set on the error prototype
   object does not get invoked for creating the error message to be passed to
   window.error.

* http/tests/security/regress-52192-expected.txt: Added.
* http/tests/security/regress-52192.html: Added.
* http/tests/security/resources/regress-52192-syntax-error.js: Added.
* http/tests/security/resources/regress-52192-throw-error.js: Added.
(catch):



