------------------------------------------------------------------------
r111439 | robert@webkit.org | 2012-03-20 22:31:46 +0100 (Di, 20. Mär 2012) | 31 Zeilen
Geänderte Pfade:
   M /trunk/LayoutTests/ChangeLog
   A /trunk/LayoutTests/fast/css/relative-positioned-block-crash-expected.txt
   A /trunk/LayoutTests/fast/css/relative-positioned-block-crash.html
   M /trunk/LayoutTests/platform/chromium/test_expectations.txt
   M /trunk/LayoutTests/platform/gtk/Skipped
   M /trunk/LayoutTests/platform/mac/Skipped
   M /trunk/LayoutTests/platform/qt/Skipped
   M /trunk/LayoutTests/platform/win/Skipped
   M /trunk/Source/WebCore/ChangeLog
   M /trunk/Source/WebCore/rendering/RenderBlock.cpp

Use-after-free of continuation in RenderBlock::paintContinuationOutlines()
https://bugs.webkit.org/show_bug.cgi?id=81276

Reviewed by David Hyatt.

Source/WebCore:

Test: fast/css/relative-positioned-block-crash.html

https://trac.webkit.org/changeset/108185/ allowed anonymous blocks to get their own layer (when they're
relatively positioned). This broke the dependency in addContinuationWithOutline() on the owner of the continuation
table and the renderer getting added to it always being in the same layer. When they're not in the same layer
there's no guarantee that the owner of the continuation table will get painted again and so avoid any stale pointers
in its continuation table should any of the renderers in there get destroyed.

Fix this for now by only adding renderers to the containing block's continuation table if we don't have our own layer.
This fix causes fast/inline/continuation-outlines-with-layers.html to regress as it uses blocks inside relatively positioned
inlines, so skip it on all platforms pending a medium-term fix.

* rendering/RenderBlock.cpp:
(WebCore::RenderBlock::paintObject):

LayoutTests:

* fast/css/relative-positioned-block-crash-expected.txt: Added.
* fast/css/relative-positioned-block-crash.html: Added.
* platform/chromium/test_expectations.txt: Skip fast/inline/continuation-outlines-with-layers.html for now.
* platform/gtk/Skipped: ditto
* platform/mac/Skipped: ditto
* platform/qt/Skipped: ditto
* platform/win/Skipped: ditto

