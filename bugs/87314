------------------------------------------------------------------------
r118316 | jchaffraix@webkit.org | 2012-05-24 05:42:27 +0200 (Do, 24. Mai 2012) | 29 Zeilen
Ge√§nderte Pfade:
   M /trunk/LayoutTests/ChangeLog
   A /trunk/LayoutTests/fast/table/canvas-column-in-column-group-expected.txt
   A /trunk/LayoutTests/fast/table/canvas-column-in-column-group.html
   A /trunk/LayoutTests/fast/table/columngroup-inside-columngroup-expected.txt
   A /trunk/LayoutTests/fast/table/columngroup-inside-columngroup.html
   M /trunk/Source/WebCore/ChangeLog
   M /trunk/Source/WebCore/rendering/RenderTableCol.cpp

Crash in RenderTableCol::nextColumn
https://bugs.webkit.org/show_bug.cgi?id=87314

Reviewed by Abhishek Arya.

Source/WebCore:

Tests: fast/table/canvas-column-in-column-group.html
       fast/table/columngroup-inside-columngroup.html

The issue comes from elements not abiding by the display property (e.g. canvas). This means
that any renderer with display: table-column would pass the current isChildAllowed check and
would confuse our algorithm to iterate.

We were getting away with allowing those children as table columns or column groups don't
paint themselves but it's better to just not allow such children in the first place.

* rendering/RenderTableCol.cpp:
(WebCore::RenderTableCol::isChildAllowed):
Fixed the logic to only accept proper column renderer (RenderTableCol with display: column
to ignore column-groups). Also removed an unneeded NULL-check.

LayoutTests:

* fast/table/canvas-column-in-column-group-expected.txt: Added.
* fast/table/canvas-column-in-column-group.html: Added.
* fast/table/columngroup-inside-columngroup-expected.txt: Added.
* fast/table/columngroup-inside-columngroup.html: Added.


