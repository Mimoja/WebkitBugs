------------------------------------------------------------------------
r124156 | morrita@google.com | 2012-07-31 04:48:33 +0200 (Di, 31. Jul 2012) | 25 Zeilen
Ge√§nderte Pfade:
   M /trunk/LayoutTests/ChangeLog
   A /trunk/LayoutTests/fast/events/mutation-during-replace-child-expected.txt
   A /trunk/LayoutTests/fast/events/mutation-during-replace-child.html
   M /trunk/Source/WebCore/ChangeLog
   M /trunk/Source/WebCore/dom/ContainerNode.cpp

Node::replaceChild() can create bad DOM topology with MutationEvent
https://bugs.webkit.org/show_bug.cgi?id=92619

Reviewed by Ryosuke Niwa.

Source/WebCore:

Node::replaceChild() calls insertBeforeCommon() after dispatching
a MutationEvent event for removeChild(). But insertBeforeCommon()
expects call sites to check the invariant and doesn't have
suffient check. So a MutationEvent handler can let some bad tree
topology to slip into insertBeforeCommon().

This change adds a guard for checking the invariant using
checkReplaceChild() between removeChild() and insertBeforeCommon().

Test: fast/events/mutation-during-replace-child.html

* dom/ContainerNode.cpp:
(WebCore::ContainerNode::replaceChild): Added a guard.

LayoutTests:

* fast/events/mutation-during-replace-child-expected.txt: Added.
* fast/events/mutation-during-replace-child.html: Added.

