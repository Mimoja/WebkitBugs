------------------------------------------------------------------------
r125376 | mihnea@adobe.com | 2012-08-12 17:57:25 +0200 (So, 12. Aug 2012) | 43 Zeilen
Ge√§nderte Pfade:
   M /trunk/LayoutTests/ChangeLog
   A /trunk/LayoutTests/fast/regions/removed-element-style-in-region-crash-expected.txt
   A /trunk/LayoutTests/fast/regions/removed-element-style-in-region-crash.html
   M /trunk/Source/WebCore/ChangeLog
   M /trunk/Source/WebCore/rendering/RenderBlock.cpp
   M /trunk/Source/WebCore/rendering/RenderInline.cpp
   M /trunk/Source/WebCore/rendering/RenderInline.h
   M /trunk/Source/WebCore/rendering/RenderRegion.cpp

CSSRegions: Crash when using style in region for removed element.
https://bugs.webkit.org/show_bug.cgi?id=93276

Reviewed by Abhishek Arya.

Source/WebCore:

When a RenderInline object from within a render flow thread is split, the cloned
hierarchy built during the split process does not have the inRenderFlowThread bit
set properly. If the cloned hierarchy is flowed into a region with region style rules,
we compute the style in region also for objects that do not have inRenderFlowThread bit
set and we store the computed style in region for caching purposes. But we only remove
an object style in region information if that object has the inRenderFlowThread bit set.
Under these circumstances, it is possible to remove a object with cached style in region
and without inRenderFlowThread bit set from the render tree and leave the associated cached
information un-removed. Such information will be accesses during the next paint phase of
the region, thus resulting a crash.

The fix is to modify RenderBlock::clone() and RenderInline::clone() functions to also copy the inRenderFlowThread bit
from the source into the clone, therefore the cloned hierarchies will have the inRenderFlowThread
bit set properly.

Test: fast/regions/removed-element-style-in-region-crash.html

* rendering/RenderBlock.cpp:
(WebCore::RenderBlock::clone):
* rendering/RenderInline.cpp:
(WebCore::RenderInline::clone): Replace former static RenderInline::cloneInline with member RenderInline::clone.
(WebCore::RenderInline::splitInlines):
* rendering/RenderInline.h:
(RenderInline):
* rendering/RenderRegion.cpp:
(WebCore::RenderRegion::setObjectStyleInRegion):
Added an assert to make sure that when we are computing style in region, we are doing for objects
with inRenderFlowThread set. Also, bail out early in this case to prevent further crashes.

LayoutTests:

Added test reproducing the problem.

* fast/regions/removed-element-style-in-region-crash-expected.txt: Added.
* fast/regions/removed-element-style-in-region-crash.html: Added.


